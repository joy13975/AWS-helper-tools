#!/usr/bin/env bash

if [ -z $(command -v jq) ]; then
    echo 'You need to install jq (see https://stedolan.github.io/jq/download/)'
    return 1
fi

export AWS_PROFILE=${AWS_PROFILE:-$1}
echo AWS_PROFILE is $AWS_PROFILE
DURATION=${DURATION:-129600}

if [ -z $MFA_ARN ]; then
    echo 'Getting MFA ARN (assuming first device)...'
    local MFA_ARN=$(aws-mfa-arn)
fi

if [[ $? != 0 ]]; then
    echo 'Failed to get MFA device ARN'
    return 1
fi

echo -n "Enter MFA code for device $MFA_ARN: "
read mfa_code
echo ""
echo "MFA Code: ${mfa_code}"

# Clear env vars if session credentials already set
if [[ ! -z $AWS_SESSION_TOKEN ]]; then
    unset AWS_ACCESS_KEY_ID
    unset AWS_SECRET_ACCESS_KEY
    unset AWS_SESSION_TOKEN
    unset AWS_SESSION_EXPIRATION
fi

local region_args=''
if [ ! -z $AWS_REGION ]; then
    region_args="--region $AWS_REGION --endpoint https://sts.$AWS_REGION.amazonaws.com"
fi

cmd="aws sts get-session-token $region_args --serial-number $MFA_ARN --token-code $mfa_code --duration-seconds $DURATION"
echo $cmd
aws_creds=$(aws sts get-session-token --serial-number $MFA_ARN --token-code $mfa_code --duration-seconds $DURATION)
if [[ $? != 0 ]]; then
    echo 'Failed to get AWS credentials'
    return 1
fi

export AWS_ACCESS_KEY_ID=$(jq -r ".Credentials.AccessKeyId" <<< $aws_creds)
export AWS_SECRET_ACCESS_KEY=$(jq -r ".Credentials.SecretAccessKey" <<< $aws_creds)
export AWS_SESSION_TOKEN=$(jq -r ".Credentials.SessionToken" <<< $aws_creds)
export AWS_SESSION_EXPIRATION=$(jq -r ".Credentials.Expiration" <<< $aws_creds)

echo "Session (ID: ${AWS_ACCESS_KEY_ID}) activated in current shell"
echo "Session will end at $AWS_SESSION_EXPIRATION"

if [[ $SHOW == 1 ]]; then
	echo "# Linux env vars:"
    echo "export AWS_DEFAULT_REGION=${AWS_REGION:-ap-northeast-1}"
    echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
    echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
    echo "export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"
    echo

	echo "# Snowflake credentials:"
    echo -e "CREDENTIALS=(
        AWS_KEY_ID='$AWS_ACCESS_KEY_ID'
        AWS_SECRET_KEY='$AWS_SECRET_ACCESS_KEY'
        AWS_TOKEN='$AWS_SESSION_TOKEN')"
fi
