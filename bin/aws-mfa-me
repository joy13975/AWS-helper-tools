#!/usr/bin/env bash

if [[ -z $(command -v jq) ]]; then
    echo 'You need to install jq (see https://stedolan.github.io/jq/download/)'
    return 1
fi

duration=${duration:-129600}
mfa_arn=${mfa_arn:-}
show=${show:-0}

if [[ -z $mfa_arn ]]; then
    echo 'Getting MFA ARN (assuming first device)...'
    mfa_arn=$(aws iam list-mfa-devices | jq -r ".MFADevices[0].SerialNumber")
fi

if [[ $? != 0 ]]; then
    echo 'Failed to get MFA device ARN'
    exit 1
fi

echo -n "Enter MFA code for device $mfa_arn: "
read mfa_code
echo ""

# Clear env vars if session credentials already set
if [[ ! -z $AWS_SESSION_TOKEN ]]; then
    export AWS_ACCESS_KEY_ID=
    export AWS_SECRET_ACCESS_KEY=
    export AWS_SESSION_TOKEN=
    export AWS_SESSION_EXPIRATION=
fi

aws_creds=$(aws sts get-session-token --serial-number $mfa_arn --token-code $mfa_code --duration-seconds $duration)
if [[ $? != 0 ]]; then
    echo 'Failed to get AWS credentials'
    exit 1
fi

export AWS_ACCESS_KEY_ID=$(jq -r ".Credentials.AccessKeyId" <<< $aws_creds)
export AWS_SECRET_ACCESS_KEY=$(jq -r ".Credentials.SecretAccessKey" <<< $aws_creds)
export AWS_SESSION_TOKEN=$(jq -r ".Credentials.SessionToken" <<< $aws_creds)
export AWS_SESSION_EXPIRATION=$(jq -r ".Credentials.Expiration" <<< $aws_creds)

echo "Session (ID: ${AWS_ACCESS_KEY_ID}) activated in current shell"
echo "Session will end at $AWS_SESSION_EXPIRATION"

if [[ $show == 1 ]]; then
	echo "# Linux env vars:"
    echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
    echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
    echo "export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"
    echo

	echo "# Snowflake credentials:"
    echo -e "CREDENTIALS=(
        AWS_KEY_ID='$AWS_ACCESS_KEY_ID'
        AWS_SECRET_KEY='$AWS_SECRET_ACCESS_KEY'
        AWS_TOKEN='$AWS_SESSION_TOKEN')"
fi
