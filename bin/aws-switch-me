#!/bin/bash
unset AWS_PROFILE
unset AWS_REGION
unset AWS_ACCESS_KEY_ID
unset AWS_SECRET_ACCESS_KEY
unset AWS_SESSION_TOKEN

AWS_PROFILE=${1:-poc001}

_get() {
    aws configure --profile $AWS_PROFILE-role get $1
}

endpoint_url=$(_get endpoint_url)
endpoint_arg="--endpoint-url $endpoint_url"
if [ -z "$endpoint_url" ]; then
    endpoint_arg=''
fi

mfa_code=$(oath | grep -i 'AWS '$AWS_PROFILE | awk '{print $NF}')
region=$(_get region)
cmd="aws sts assume-role \
    --region $region\
    --role-arn $(_get role_arn) \
    --serial-number $(_get mfa_serial) \
    --role-session-name $(_get role_session_name) \
    --duration-second $(_get duration_seconds) \
    $endpoint_arg --token-code"

export AWS_PROFILE=$AWS_PROFILE

echo Caller ARN: $(aws sts get-caller-identity --query 'Arn')
echo MFA: $mfa_code
cmd="$cmd $mfa_code"
# echo $cmd
output=$(eval $cmd)
if [ $? -ne 0 ]; then
    echo $output
    echo
    echo 'Something went wrong...'
    return 1
fi

_jq_get() {
    echo $output | jq -r .Credentials.$1
}

export AWS_REGION=$region
export AWS_ACCESS_KEY_ID=$(_jq_get AccessKeyId)
export AWS_SECRET_ACCESS_KEY=$(_jq_get SecretAccessKey)
export AWS_SESSION_TOKEN=$(_jq_get SessionToken)


if [[ $show == 1 ]]; then
	echo "# Linux env vars:"
    echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
    echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
    echo "export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"
    echo

	echo "# Snowflake credentials:"
    echo -e "CREDENTIALS=(
        AWS_KEY_ID='$AWS_ACCESS_KEY_ID'
        AWS_SECRET_KEY='$AWS_SECRET_ACCESS_KEY'
        AWS_TOKEN='$AWS_SESSION_TOKEN')"
fi
